jobs:
  build:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v2
    - continue-on-error: true
      name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - continue-on-error: true
      name: Cache local Maven repository
      uses: actions/cache@v2
      with:
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        path: ~/.m2/repository
        restore-keys: '${{ runner.os }}-maven-

          '
    - continue-on-error: true
      id: install-secret-key
      name: Install GPG secret key
      run: 'cat <(echo -e "${{ secrets.GPG_PRIVATE_KEY }}") | gpg --batch --import

        '
    - continue-on-error: true
      env:
        JDK_JAVA_OPTIONS: --illegal-access=warn
        MAVEN_OPTS: --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED
          --add-opens=java.base/java.text=ALL-UNNAMED --add-opens=java.desktop/java.awt.font=ALL-UNNAMED
        OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
        OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
      name: Build and Deploy to MVN Central
      run: "mvn --no-transfer-progress \\\n  --batch-mode -Dgpg.passphrase=${{ secrets.GPG_PASSPHRASE\
        \ }} \\\n  --file pom.xml -s release/m2-settings.xml clean deploy -DskipTests=true\
        \ -DperformRelease=true\n"
    - continue-on-error: true
      id: get_version
      name: Get the version
      run: echo "VERSION=$(echo $GITHUB_REF | cut -d / -f 3 | cut -c 2-)" >> $GITHUB_OUTPUT
    - continue-on-error: true
      run: echo "previous_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo
        '')" >> $GITHUB_ENV
    - continue-on-error: true
      id: changelog
      if: env.previous_tag
      name: Generate Release Changelog
      uses: jaywcjlove/changelog-generator@main
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    - continue-on-error: true
      name: Create javadoc zip
      uses: vimtor/action-zip@v1
      with:
        dest: javadoc.zip
        files: target/apidocs
    - continue-on-error: true
      name: Create Github Release
      uses: softprops/action-gh-release@v1
      with:
        body: ${{ steps.changelog.outputs.changelog }}
        draft: true
        files: 'target/restfb*.jar

          javadoc.zip

          '
        name: Release ${{ steps.get_version.outputs.VERSION }}
        prerelease: false
name: Publish to Maven Central
on:
  repository_dispatch:
    types: trigger-ga___release.yml
